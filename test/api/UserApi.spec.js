/*
 * Recomax REST API
 * Recomax REST API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@recomax.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RecomaxRestApi);
  }
}(this, function(expect, RecomaxRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RecomaxRestApi.UserApi();
  });

  describe('(package)', function() {
    describe('UserApi', function() {
      describe('addUserUsingPOST', function() {
        it('should call addUserUsingPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for addUserUsingPOST call and complete the assertions
          /*

          instance.addUserUsingPOST(, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(RecomaxRestApi.);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('addUserUsingPUT', function() {
        it('should call addUserUsingPUT successfully', function(done) {
          // TODO: uncomment, update parameter values for addUserUsingPUT call and complete the assertions
          /*

          instance.addUserUsingPUT(, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(RecomaxRestApi.);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleteUserUsingDELETE', function() {
        it('should call deleteUserUsingDELETE successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteUserUsingDELETE call and complete the assertions
          /*

          instance.deleteUserUsingDELETE(, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(RecomaxRestApi.);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getSegmentsUsingGET', function() {
        it('should call getSegmentsUsingGET successfully', function(done) {
          // TODO: uncomment, update parameter values for getSegmentsUsingGET call and complete the assertions
          /*

          instance.getSegmentsUsingGET(, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a();
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getUserUsingGET', function() {
        it('should call getUserUsingGET successfully', function(done) {
          // TODO: uncomment, update parameter values for getUserUsingGET call and complete the assertions
          /*

          instance.getUserUsingGET(, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(RecomaxRestApi.);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listUsersUsingGET', function() {
        it('should call listUsersUsingGET successfully', function(done) {
          // TODO: uncomment, update parameter values for listUsersUsingGET call and complete the assertions
          /*
          var opts = {};

          instance.listUsersUsingGET(, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(RecomaxRestApi.);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateUserUsingPOST', function() {
        it('should call updateUserUsingPOST successfully', function(done) {
          // TODO: uncomment, update parameter values for updateUserUsingPOST call and complete the assertions
          /*

          instance.updateUserUsingPOST(, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(RecomaxRestApi.);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
